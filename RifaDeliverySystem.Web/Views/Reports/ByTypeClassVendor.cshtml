@model IEnumerable<RifaDeliverySystem.Web.Models.TypeClassVendorReportItem>
@using System.Linq

@{
    ViewData["Title"] = "Report by Type/Class";
    var types = ViewBag.Types as List<string> ?? new List<string>();
    var classes = ViewBag.Classes as List<string> ?? new List<string>();
    var report = Model ?? Enumerable.Empty<RifaDeliverySystem.Web.Models.TypeClassVendorReportItem>();
}
@using System.Globalization
@{
    CultureInfo.CurrentCulture = new CultureInfo("es-PY");
    CultureInfo.CurrentUICulture = new CultureInfo("es-PY");
}


<h1>@ViewData["Title"]</h1>
@{
    var type = Context.Request.Query["type"].ToString();
    var vendorClass = Context.Request.Query["vendorClass"].ToString();
}

<div class="mb-2 d-flex gap-2">
    <a class="btn btn-outline-success"
       href="@Url.Action("ExportByTypeClassVendorExcel", "Reports", new { type, vendorClass })">
        Exportar Excel
    </a>

    <a class="btn btn-outline-danger"
       href="@Url.Action("ExportByTypeClassVendorPdf", "Reports", new { type, vendorClass })">
        Exportar PDF
    </a>
</div>
<form asp-action="ByTypeClassVendor" method="post" class="row g-3 mb-4">
    <div class="col-auto">
        <select name="type" class="form-select">
            <option value="" disabled selected>Tipo</option>
            @foreach (var t in types)
            {
                <option value="@t">@t</option>
            }
        </select>
    </div>
    <div class="col-auto">
        <select name="vendorClass" class="form-select">
            <option value="" disabled selected>Clase</option>
            @foreach (var c in classes)
            {
                <option value="@c">@c</option>
            }
        </select>
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Generate</button>
    </div>
</form>

@if (report.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Vendedor</th>
                <th>Entregados</th>
                <th>Vendidos</th>
                <th>Retornados</th>
                <th>Anulados</th>
                <th>Bruto</th>
                <th>Comision</th>
                <th>Neto</th>
                <th>Estado</th>
                <th>VentaPrct %</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in report)
            {
                <tr>
                    <td>@item.VendorName</td>
                    <td>@item.Delivered</td>
                    <td>@item.Sold</td>
                    <td>@item.Returned</td>
                    <td>@item.Annulled</td>
                    <td>@item.GrossAmount.ToString("C0")</td>
                    <td>@item.CommissionAmount.ToString("C0")</td>
                    <td>@item.NetAmount.ToString("C0")</td>
                    <td>@(item.Closed ? "Cerrado" : "Abierto")</td>
                    <td>@item.SalePercentage.ToString("F2") %</td>
                </tr>
            }
            @{
                var totalDelivered = report.Sum(i => i.Delivered);
                var totalSold = report.Sum(i => i.Sold);
                var totalReturned = report.Sum(i => i.Returned);
                var totalAnnulled = report.Sum(i => i.Annulled);
                var totalGross = report.Sum(i => i.GrossAmount);
                var totalCommission = report.Sum(i => i.CommissionAmount);
                var totalNet = report.Sum(i => i.NetAmount);
            }
            <tr class="fw-bold table-secondary">
                <td>Total</td>
                <td>@totalDelivered</td>
                <td>@totalSold</td>
                <td>@totalReturned</td>
                <td>@totalAnnulled</td>
                <td>@totalGross.ToString("C0")</td>
                <td>@totalCommission.ToString("C0")</td>
                <td>@totalNet.ToString("C0")</td>
                <td colspan="2"></td>
            </tr>
        </tbody>
    </table>
}
else
{
    <p>No data to display. Select a Type and Class and click Generate.</p>
}
